name: Daily Build and Push to GHCR

on:
  schedule:
    - cron: '0 16 * * *'  # 每天 GMT+8 00:00 執行（相當於 UTC 16:00）
  workflow_dispatch:     # 允許手動觸發

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # 簽出倉庫程式碼
      - name: Checkout repository
        uses: actions/checkout@v3

      # 設置 Docker Buildx（支援多平台構建）
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 獲取當前日期和時間（GMT+8）
      - name: Get current date in GMT+8
        id: date
        env:
          TZ: 'Asia/Taipei'  # 設置時區為 GMT+8
        run: echo "date=$(date +'%Y%m%d%H%M')" >> $GITHUB_ENV


      # 拉取現有映像並提取 php83-php 版本
      - name: Extract current php83-php version from existing image
        id: extract_version
        run: |
          docker pull ghcr.io/${{ github.repository_owner }}/rocky9-php83:latest || true
          CURRENT_VERSION=$(docker run --rm ghcr.io/${{ github.repository_owner }}/rocky9-php83:latest rpm -q php83-php --qf '%{VERSION}-%{RELEASE}' || echo "none")
          if [ "$CURRENT_VERSION" = "none" ]; then
            echo "No existing image or php83-php found, forcing update"
            echo "PHP_UPDATE_AVAILABLE=true" >> $GITHUB_ENV
          else
            echo "Current php83-php version: $CURRENT_VERSION"
            echo "CURRENT_PHP_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV
          fi

      # 從現有映像檢查 php83-php 是否有更新
      - name: Check for php83-php updates
        id: check_updates
        if: env.PHP_UPDATE_AVAILABLE != 'true'
        run: |
          CHECK_RESULT=$(docker run --rm --user root ghcr.io/${{ github.repository_owner }}/rocky9-php83:latest bash -c "
            microdnf check-update php83-php || true
          ")
          echo "$CHECK_RESULT"  # 顯示結果供日誌查看
          if echo "$CHECK_RESULT" | grep -q "^php83-php"; then
            echo "Update available for php83-php (current: ${{ env.CURRENT_PHP_VERSION }})"
            echo "PHP_UPDATE_AVAILABLE=true" >> $GITHUB_ENV
          else
            echo "No update available for php83-php (current: ${{ env.CURRENT_PHP_VERSION }})"
            echo "PHP_UPDATE_AVAILABLE=false" >> $GITHUB_ENV
          fi

      # 登入 GitHub Container Registry（僅在有更新時執行）
      - name: Log in to GHCR
        if: env.PHP_UPDATE_AVAILABLE == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}  # 您的 GitHub 用戶名
          password: ${{ secrets.GHCR_TOKEN }}  # GitHub 提供的 Token


      # 構建並推送映像（僅在有更新時執行）
      - name: Build and push Docker image
        if: env.PHP_UPDATE_AVAILABLE == 'true'
        uses: docker/build-push-action@v4
        with:
          context: .  # 使用當前目錄的 Dockerfile
          push: true  # 推送至 ghcr.io
          tags: |
            ghcr.io/${{ github.repository_owner }}/rocky9-php83:latest
            ghcr.io/${{ github.repository_owner }}/rocky9-php83:${{ env.date }}
          build-args: |
            BUILD_DATE=${{ github.event.repository.updated_at || github.event.head_commit.timestamp }}
          cache-from: type=gha  # 使用 GitHub Actions 緩存加速構建
          cache-to: type=gha,mode=max  # 儲存緩存
#          no-cache: true  # 完全禁用緩存(避免microdnf update未被更新)
