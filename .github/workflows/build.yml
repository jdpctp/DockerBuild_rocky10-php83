name: Weekly Build and Push to GHCR

on:
  schedule:
    - cron: '0 16 * * 1'  # 每週一 GMT+8 00:00 執行（相當於 UTC 16:00）
  workflow_dispatch:     # 允許手動觸發

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read     # 讀取代碼是基本需求
      packages: write    # 賦予 GITHUB_TOKEN 寫入 GHCR 的權限 (GHCR = packages)    
    steps:
      # 簽出倉庫程式碼
      - name: Checkout repository
        uses: actions/checkout@v3

      # 設置 Docker Buildx（支援多平台構建）
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 獲取當前日期和時間（GMT+8）
      - name: Get current date in GMT+8
        id: date
        env:
          TZ: 'Asia/Taipei'  # 設置時區為 GMT+8
        run: echo "date=$(date +'%Y%m%d%H%M')" >> $GITHUB_ENV

      # 登入 GitHub Container Registry
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}  # 您的 GitHub 用戶名
          password: ${{ secrets.GITHUB_TOKEN }}   # 使用 GitHub Actions 內建的 GITHUB_TOKEN 作為密碼


      # 構建並推送映像
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .  # 使用當前目錄的 Dockerfile
          push: true  # 推送至 ghcr.io
          tags: |
            ghcr.io/${{ github.repository_owner }}/rocky10-php83:latest
            ghcr.io/${{ github.repository_owner }}/rocky10-php83:${{ env.date }}
          build-args: |
            BUILD_DATE=${{ github.event.repository.updated_at || github.event.head_commit.timestamp }}
          cache-from: type=gha  # 使用 GitHub Actions 緩存加速構建
          cache-to: type=gha,mode=max  # 儲存緩存
          no-cache: true  # 完全禁用緩存(避免microdnf update未被更新)
          platforms: linux/amd64,linux/arm64
